@model Contaminants_Monitoring.ViewModels.CollectionViewModel
@{
    ViewBag.Title = "EditCollection";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<script src="~/Scripts/jquery-3.3.1.js"></script>*@
@*<link href="~/Content/jquery-ui.min.css" rel="stylesheet" />*@
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            @Html.ActionLink("Home", "Index", "Home")
        </li>
        <li class="breadcrumb-item">
            @Html.ActionLink("My Samples List", "CollectionIndex", "Generate")
        </li>
        <li class="breadcrumb-item active" aria-current="page">Collection Data Form</li>
    </ol>
</nav>
<h3 style="padding-top: 20px; color: dimgray;">Collection Data Form</h3>

<hr />
@using (Html.BeginForm("SaveCollectionData", "Generate", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div>
    @Html.AntiForgeryToken()
    @if (!String.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-info alert-dismissible fade show">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    <strong>@ViewBag.Message</strong>
                </div>
            </div>
        </div>
    }
    @if (!String.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="alert alert-danger alert-dismissible fade show">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    <strong>@ViewBag.ErrorMessage</strong>
                </div>
            </div>
        </div>
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.labSample.pkLabSampleId)
    @Html.HiddenFor(model => model.collectorId)
    <div class="col-md-8">
        <button type="submit" value="Save" class="btn btn-sm btn-success float-right"> Save &nbsp; <i class="fa fa-check"></i></button>
        @*<input type="submit" value="End Collection" class="btn btn-default" formaction="collect" />*@
    </div>
    <br /> <br />
    <div class="form-group row">
        @Html.Label("Sample Identity Code", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        @Html.DisplayTextFor(model => model.labSample.SampleNb)

    </div>
    <div class="form-group row">
        @Html.Label("Laboratory", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        @Html.DisplayTextFor(model => model.labSample.Laboratory.LaboratoryName)
    </div>
    <div class="form-group row">
        @Html.Label("Contaminant Type ", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        @Html.DisplayTextFor(model => model.labSample.ContaminantType.ContaminantName)
    </div>
    <div class="form-group row">
        @Html.Label("Commodity", htmlAttributes: new { @class = "control-label col-md-2 font-weight-bold" })
        @Html.DisplayTextFor(model => model.labSample.Commodity.CommodityName)
        @Html.DisplayTextFor(model => model.labSample.Commodity.CommodityCode)
    </div>
    <div class="form-group row">
        @Html.Label("Sampling Plan ", new { @class = "control-label col-md-2 font-weight-bold" })
        @Html.DisplayTextFor(m => m.labSample.SamplingPlan1.SamplingPlanCode)
    </div>
    <div class="form-group row">
        @Html.Label("Sampling Reason: ", new { @class = "control-label col-md-2 font-weight-bold" })
        @Html.DisplayTextFor(model => model.labSample.SamplingReason.SamplingReasonText)

        @*@Html.DropDownListFor(m => m.selectedSamplingReasonId, new SelectList(Model.samplingReasons, "pkSamplingReasonId", "SamplingReasonText"), "select", new { @class = "form-control", id = "reasonChosenId" })*@
    </div>

    <hr />
    <p class="font-weight-bold">Fill the fields with the sampling information:</p>

    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-item nav-link active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Sample Description</a>
            <a class="nav-item nav-link" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Premise Information</a>
            <a class="nav-item nav-link" id="nav-contact-tab" data-toggle="tab" href="#nav-contact" role="tab" aria-controls="nav-contact" aria-selected="false">Product Details</a>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <br />
            <div class="form-group row">
                @Html.Label("Commodity Description ", new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.selectedCommodityStateId, new SelectList(Model.commodityStates, "pkCommodityStateId", "CommodityDescription"), "select", new { @class = "form-control form-control-sm", id = "CommodityStateChosenId" })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Collected Quanitity ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.CollectedQuantity, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
                @Html.Label("Sampling Type ", new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.selectedSamplingTypeId, new SelectList(Model.samplingTypes, "pkSamplingTypeId", "SamplingTypeText"), "select", new { @class = "form-control form-control-sm", id = "typeChosenId" })
                </div>
            </div>
            <div class="form-group row">

                @Html.Label("Sampling Date ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.SamplingDate, new { htmlAttributes = new { id = "SamplingDateDatePicker", @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.labSample.SamplingDate, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Sampling Time ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.SamplingTime, new { htmlAttributes = new { id = "timePicker", @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.SamplingTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Notes", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    <style>
                        textarea {
                            max-width: 100%;
                            border: 1px solid lightgray;
                        }
                    </style>
                    @Html.TextAreaFor(model => model.labSample.Notes_Collector, 10, 300, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
            <br />
            <div class="form-group row">
                @Html.Label("Premise Type ", new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.selectedPremiseType, new SelectList(Model.premiseTypes), "select", new { @class = "form-control form-control-sm", id = "premiseTypeChosenId" })
                </div>
            </div>

            <div class="form-group row">
                @Html.Label("Premise Name ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.PremiseName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
                @Html.Label("Premise Address ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.PremiseAddress, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>

            </div>
            <div class="form-group row">
                @Html.Label("Contact Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.ContactName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
                @Html.Label("Contact Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.ContactPhoneNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
            </div>
            <br />
            <p class="font-weight-bold">Source</p>
            <hr />
            <div class="form-group row">
                @Html.Label("Source Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.selectedSourceType, new SelectList(Model.sourceTypes, "pkSourceTypeId", "SourceTypeText"), "select", new { @class = "form-control form-control-sm", id = "sourceTypeChosenId" })
                </div>

            </div>
            <div class="form-group row">
                @Html.Label("Source Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.SourceName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
                @Html.Label("Source Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.SourceAddress, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>

            </div>
            <div class="form-group row">
                @Html.Label("Source Contact Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.SourceContactName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
                @Html.Label("Source Contact Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.SourceContactNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                </div>
            </div>
        </div>
        <div class="tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">
            <br />
            <div class="form-group row">
                @Html.Label("Brand Name ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.BrandName, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.BrandName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.Label("Manufacturer ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.Manufacturer, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.Manufacturer, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Distributer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.Distributor, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.Distributor, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Importer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.Importer, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.Importer, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Sample Origin", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.selectedSampleOriginId, new SelectList(Model.sampleOrigins, "pkSampleOriginId", "OriginText"), "select", new { @class = "form-control form-control-sm", id = "originChosenId" })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Country of Origin", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.selectedOriginCountryId, new SelectList(Model.originCountries, "pkCountryId", "CountryName"), "select", new { @class = "form-control form-control-sm", id = "countryChosenId" })
                </div>
                @Html.Label("Packaging Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(m => m.selectedPackagingTypeId, new SelectList(Model.packagingTypes, "pkPackagingTypeId", "PackagingTypeText"), "select", new { @class = "form-control form-control-sm", id = "packTypeChosenId" })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Pack Quantity Size", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.PackQuantitySize, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.PackQuantitySize, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Batch Lot Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.BatchLotNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.BatchLotNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.Label("Shelf Life", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.ShelfLife, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.ShelfLife, "", new { @class = "text-danger" })
                </div>
                @Html.Label("Storage Conditions", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.labSample.StorageConditions, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.labSample.StorageConditions, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>







    <div class="form-group row">

    </div>




    <div class="form-group row">

    </div>



    <div class="form-group row">

    </div>


</div>

    <div class="form-group row">

    </div>



    <div class="form-group row">

    </div>





}
@*<script src="~/Scripts/popper.js"></script>*@
<script src="~/Scripts/jquery-3.3.1.js"></script>
@*<script src="~/Scripts/jquery-ui-1.12.1.js"></script>*@
<script>

    $(document).ready(function () {
        $("#SamplingDateDatePicker").datepicker(
            {
                showTodayButton: true,
                dateFormat: 'dd-M-yy',
                showClose: true,
                showClear: true,
                toolbarPlacement: 'top',
                stepping: 15,
            });
    });
</script>
